warning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes
  --> $DIR/issue-55872-1.rs:3:32
   |
LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]
   |                                ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(incomplete_features)]` on by default
   = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information

error[E0276]: impl has stricter requirements than trait
  --> $DIR/issue-55872-1.rs:17:5
   |
LL |     fn foo<T>() -> Self::E;
   |     ----------------------- definition of `foo` from trait
...
LL |     fn foo<T: Default>() -> Self::E {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `T: Default`

error[E0277]: the trait bound `S: Copy` is not satisfied in `(S, T)`
  --> $DIR/issue-55872-1.rs:13:14
   |
LL |     type E = impl Copy;
   |              ^^^^^^^^^ within `(S, T)`, the trait `Copy` is not implemented for `S`
   |
   = note: required because it appears within the type `(S, T)`
help: consider further restricting this bound
   |
LL | impl<S: Default + std::marker::Copy> Bar for S {
   |                 ^^^^^^^^^^^^^^^^^^^

error[E0277]: the trait bound `T: Copy` is not satisfied in `(S, T)`
  --> $DIR/issue-55872-1.rs:13:14
   |
LL |     type E = impl Copy;
   |              ^^^^^^^^^ within `(S, T)`, the trait `Copy` is not implemented for `T`
   |
   = note: required because it appears within the type `(S, T)`
help: consider further restricting this bound
   |
LL |     fn foo<T: Default + std::marker::Copy>() -> Self::E {
   |                       ^^^^^^^^^^^^^^^^^^^

error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias
  --> $DIR/issue-55872-1.rs:17:37
   |
LL |       fn foo<T: Default>() -> Self::E {
   |  _____________________________________^
LL | |
LL | |
LL | |         (S::default(), T::default())
LL | |     }
   | |_____^

error: aborting due to 4 previous errors; 1 warning emitted

Some errors have detailed explanations: E0276, E0277.
For more information about an error, try `rustc --explain E0276`.
